var searchIndex = new Map(JSON.parse('[["narangcia_cryptic",{"t":"EEECCCFNNNNNNNNNNNNOONNONNNNONCCCCCCCFENNNNNNNNNONNOCNNNNONNFNNNNNNNNNNNNECECFNNNNNNNNNNNNHEECCFNNNNNNNNNNNKMMFNNNNNOOOOONNNNNFKONNCNNNNNNMNCMONNNNNMNFKFNNNNNNOONNNNMNNMNNOONNNNOOOONNNNNNNNFNNNNNNNNNNNNFNNNNNONNNONNCNNNNNNEEECCCFNNNNNNNNNNNNNNNNPGNNNNNNNNNNNNNNNKMMMMMFNNNNNNNNNOONONNNNGPPPPPPPPPPPPPPPPPPNNNNNNNNNNN","n":["AuthError","AuthService","CrypticUser","auth_service","core","error","AuthService","borrow","borrow_mut","default","from","get_tokens","get_user_from_token","get_user_id_from_token","into","is_token_expired","login_with_credentials","login_with_credentials_and_tokens","new","password_manager","persistent_users_manager","refresh_access_token","signup","token_manager","try_from","try_into","type_id","validate_access_token","vars","vzip","credentials","hash","password","policy","token","user","vars","Credentials","PlainPassword","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","fmt","from","from_plain_password","identifier","into","new","password_hash","plain_password","to_owned","try_from","try_into","type_id","user_id","verify_password","vzip","PlainPassword","as_str","borrow","borrow_mut","drop","from","into","new","try_from","try_into","type_id","vzip","zeroize","Argon2Hasher","argon2","generate_secure_salt","salt","Argon2Hasher","borrow","borrow_mut","default","from","hash","into","new","try_from","try_into","type_id","verify","vzip","generate_secure_salt","Argon2PasswordManager","SecurePasswordManager","argon2","manager","Argon2PasswordManager","borrow","borrow_mut","default","from","hash_password","into","try_from","try_into","type_id","verify_password","vzip","SecurePasswordManager","hash_password","verify_password","PasswordPolicy","borrow","borrow_mut","default","from","into","min_length","require_digit","require_lowercase","require_special_char","require_uppercase","try_from","try_into","type_id","validate_password","vzip","TokenPair","TokenService","access_token","borrow","borrow_mut","claims","clone","clone_into","clone_to_uninit","deserialize","fmt","from","generate_token_pair","into","jwt","refresh_access_token","refresh_token","serialize","to_owned","try_from","try_into","type_id","validate_access_token","vzip","AccessTokenClaims","Claims","RefreshTokenClaims","borrow","","borrow_mut","","deserialize","","exp","","fmt","","from","","get_expiration","","","get_subject","","","iat","","into","","serialize","","sub","","token_type","","try_from","","try_into","","type_id","","vzip","","JwtTokenService","borrow","borrow_mut","from","generate_token_pair","into","new","refresh_access_token","try_from","try_into","type_id","validate_access_token","vzip","User","borrow","borrow_mut","clone","clone_into","clone_to_uninit","credentials","default","fmt","from","id","into","new","persistence","to_owned","try_from","try_into","type_id","vzip","with_plain_password","InMemoryUserRepo","PersistentUsers","UserRepository","in_memory","store","traits","InMemoryUserRepo","add_user","borrow","borrow_mut","default","delete_user","fmt","from","get_user_by_id","get_user_by_identifier","into","new","try_from","try_into","type_id","update_user","vzip","InMemory","PersistentUsers","add_user","borrow","borrow_mut","delete_user","fmt","from","get_user_by_id","get_user_by_identifier","in_memory","into","try_from","try_into","type_id","update_user","vzip","UserRepository","add_user","delete_user","get_user_by_id","get_user_by_identifier","update_user","AuthServiceVariables","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","fmt","from","into","refresh_token_expiration","secret_key","to_owned","token_expiration","try_from","try_into","type_id","vzip","AuthError","ConfigError","HashingError","InvalidCredentials","InvalidInput","InvalidPassword","InvalidToken","MissingPasswordManager","MissingPersistentUserManager","MissingTokenManager","NotImplemented","PasswordVerificationError","ServiceUnavailable","TokenExpired","TokenGeneration","TokenValidation","UserAlreadyExists","UserNotFound","VerificationError","borrow","borrow_mut","fmt","","from","into","to_string","try_from","try_into","type_id","vzip"],"q":[[0,"narangcia_cryptic"],[6,"narangcia_cryptic::auth_service"],[30,"narangcia_cryptic::core"],[37,"narangcia_cryptic::core::credentials"],[60,"narangcia_cryptic::core::credentials::plain_password"],[73,"narangcia_cryptic::core::hash"],[77,"narangcia_cryptic::core::hash::argon2"],[90,"narangcia_cryptic::core::hash::salt"],[91,"narangcia_cryptic::core::password"],[95,"narangcia_cryptic::core::password::argon2"],[107,"narangcia_cryptic::core::password::manager"],[110,"narangcia_cryptic::core::policy"],[126,"narangcia_cryptic::core::token"],[150,"narangcia_cryptic::core::token::claims"],[189,"narangcia_cryptic::core::token::jwt"],[202,"narangcia_cryptic::core::user"],[222,"narangcia_cryptic::core::user::persistence"],[228,"narangcia_cryptic::core::user::persistence::in_memory"],[245,"narangcia_cryptic::core::user::persistence::store"],[262,"narangcia_cryptic::core::user::persistence::traits"],[268,"narangcia_cryptic::core::vars"],[286,"narangcia_cryptic::error"],[316,"alloc::string"],[317,"core::result"],[318,"alloc::sync"],[319,"alloc::boxed"],[320,"core::option"],[321,"core::any"],[322,"core::fmt"],[323,"password_hash::salt"],[324,"password_hash::errors"],[325,"core::future::future"],[326,"core::pin"],[327,"serde::de"],[328,"serde::ser"]],"i":"```````f0000000000000000000000`````````Bl000000000000`0000000`Cd00000000000`````Cf00000000000``````Cn0000000000`Al0`Dd00000000000000``j00`000000Bd1`011111101```DlDn1010101010Bj21021212121212121212121`E`00000000000`Ab00000000000`000000```````Ed000000000000000Ef`000000000000000`Bb0000`Ah0000000000000000`l0000000000000000000000000000","f":"```````{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{}f}{cc{}}{{{b{f}}h}{{n{jl}}}}{{{b{f}}{b{A`}}}{{n{Abl}}}}{{{b{f}}{b{A`}}}{{n{hl}}}}{{}c{}}{{{b{f}}{b{A`}}}Ad}{{{b{f}}{b{A`}}{b{A`}}}{{n{Abl}}}}{{{b{f}}{b{A`}}{b{A`}}}{{n{{Af{Abj}}l}}}}{{{Aj{Ah}}{B`{{An{Al}}}}{B`{{An{Bb}}}}{B`{{An{Bd}}}}}{{n{fl}}}}{fAn}0{{{b{f}}{b{A`}}}{{n{jl}}}}{{{b{f}}Ab}{{n{Bfl}}}}2{c{{n{e}}}{}{}}{{}{{n{c}}}{}}{bBh}{{{b{f}}{b{A`}}}{{n{{An{Bj}}l}}}}{fAj}{{}c{}}`````````{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{Bl}}}Bl}{{b{b{dc}}}Bf{}}{{bBn}Bf}{{}Bl}{{{b{Bl}}{b{dC`}}}Cb}{cc{}}{{{b{Al}}hhCd}{{n{Bll}}}}{Blh}{{}c{}}{{hhh}Bl}2`{bc{}}{c{{n{e}}}{}{}}{{}{{n{c}}}{}}{bBh}6{{{b{Bl}}{b{Al}}{b{Cd}}}{{n{Adl}}}}{{}c{}}`{{{b{Cd}}}{{b{A`}}}}{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{dCd}}}Bf}>;{hCd}98751`````32{{}Cf}{cc{}}{{{b{Cf}}{b{{Ch{Bn}}}}{B`{{b{Cj}}}}}{{n{hCl}}}}?2<;:{{{b{Cf}}{b{{Ch{Bn}}}}{b{A`}}}{{n{AdCl}}}}9{{}{{n{CjCl}}}}`````87{{}Cn}4{{{b{Cn}}{b{A`}}}{{Db{{An{D`}}}}}}{{}c{}}{c{{n{e}}}{}{}}{{}{{n{c}}}{}}{bBh}{{{b{Cn}}{b{A`}}{b{A`}}}{{Db{{An{D`}}}}}}{{}c{}}`{{{b{Al}}{b{A`}}}{{Db{{An{D`}}}}}}{{{b{Al}}{b{A`}}{b{A`}}}{{Db{{An{D`}}}}}}`{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{}Dd}{cc{}};{DdDf}{DdAd}000<;:{{{b{Dd}}{b{A`}}}{{n{Bfl}}}}9``{jh}76`{{{b{j}}}j}{{b{b{dc}}}Bf{}}{{bBn}Bf}{c{{n{j}}}Dh}{{{b{j}}{b{dC`}}}Cb}9{{{b{Bd}}{b{A`}}}{{Db{{An{D`}}}}}}{{}c{}}`17{{{b{j}}c}nDj}{bc{}}{c{{n{e}}}{}{}}{{}{{n{c}}}{}}{bBh}6{{}c{}}```{b{{b{c}}}{}}0{{{b{d}}}{{b{dc}}}{}}0{c{{n{Dl}}}Dh}{c{{n{Dn}}}Dh}{DlDf}{DnDf}{{{b{Dl}}{b{dC`}}}Cb}{{{b{Dn}}{b{dC`}}}Cb}{cc{}}0{{{b{Bj}}}Df}{{{b{Dl}}}Df}{{{b{Dn}}}Df}{{{b{Bj}}}{{b{A`}}}}{{{b{Dl}}}{{b{A`}}}}{{{b{Dn}}}{{b{A`}}}}:9{{}c{}}0{{{b{Dl}}c}nDj}{{{b{Dn}}c}nDj}{Dlh}{Dnh}10{c{{n{e}}}{}{}}0{{}{{n{c}}}{}}0{bBh}0{{}c{}}0`{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{cc{}}{{{b{E`}}{b{A`}}}{{Db{{An{D`}}}}}}<{{{b{A`}}EbEb}E`}187615`43{{{b{Ab}}}Ab}{{b{b{dc}}}Bf{}}{{bBn}Bf}{AbBl}{{}Ab}{{{b{Ab}}{b{dC`}}}Cb}8{Abh}{{}c{}}{{hBl}Ab}`{bc{}}{c{{n{e}}}{}{}}{{}{{n{c}}}{}}{bBh}{{}c{}}{{{b{Al}}hhCd}{{n{Abl}}}}```````{{{b{Ed}}Ab}{{Db{{An{D`}}}}}}{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{}Ed}{{{b{Ed}}{b{A`}}}{{Db{{An{D`}}}}}}{{{b{Ed}}{b{dC`}}}Cb}{cc{}}22>3;:968``{{{b{Ef}}Ab}{{Db{{An{D`}}}}}}65{{{b{Ef}}{b{A`}}}{{Db{{An{D`}}}}}}{{{b{Ef}}{b{dC`}}}Cb}311{{}Ef}{{}c{}}{c{{n{e}}}{}{}}{{}{{n{c}}}{}}{bBh}7{{}c{}}`{{{b{Bb}}Ab}{{Db{{An{D`}}}}}}{{{b{Bb}}{b{A`}}}{{Db{{An{D`}}}}}}001`{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{Ah}}}Ah}{{b{b{dc}}}Bf{}}{{bBn}Bf}{{}Ah}{{{b{Ah}}{b{dC`}}}Cb}{cc{}}>{AhEb}{Ahh}{bc{}}2{c{{n{e}}}{}{}}{{}{{n{c}}}{}}{bBh}{{}c{}}```````````````````>={{{b{l}}{b{dC`}}}Cb}08{{}c{}}{bh}6543","D":"AEl","p":[[1,"reference",null,null,1],[0,"mut"],[5,"AuthService",6],[5,"String",316],[5,"TokenPair",126],[6,"AuthError",286],[6,"Result",317,null,1],[1,"str"],[5,"User",202],[1,"bool"],[1,"tuple",null,null,1],[5,"AuthServiceVariables",268],[5,"Arc",318,null,1],[10,"SecurePasswordManager",107],[5,"Box",319,null,1],[6,"Option",320,null,1],[10,"UserRepository",262],[10,"TokenService",126],[1,"unit"],[5,"TypeId",321],[10,"Claims",150],[5,"Credentials",37],[1,"u8"],[5,"Formatter",322],[8,"Result",322],[5,"PlainPassword",60],[5,"Argon2Hasher",77],[1,"slice"],[5,"SaltString",323],[6,"Error",324],[5,"Argon2PasswordManager",95],[10,"Future",325,null,1],[5,"Pin",326],[5,"PasswordPolicy",110],[1,"usize"],[10,"Deserializer",327],[10,"Serializer",328],[5,"AccessTokenClaims",150],[5,"RefreshTokenClaims",150],[5,"JwtTokenService",189],[1,"u64"],[5,"InMemoryUserRepo",228],[6,"PersistentUsers",245]],"r":[[0,286],[1,6],[38,60],[73,77],[75,90],[91,95],[92,107],[222,228],[223,245],[224,262]],"b":[[307,"impl-Debug-for-AuthError"],[308,"impl-Display-for-AuthError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAI4ALwAIAAEAGQACAB4AAAAgAAAAJQAAACcABwA2AAMAPAAAAD8AAgBFAAUATAAAAE8AAgBWAAIAWgAAAGEAAgBnAAIAawAAAHAAAQB1AAcAfgAAAIEAAgCFAAQAjwAFAJYAAACaAAUAogABALAAAQC2AAcAvwABAMYAAgDKAAAAzAAEANIAAQDZAAQA5wACAOsAAADxAAIA9QAAAPkAAQD8AAAAAgECAAYBAAAOAQYAGQEAABsBAwAyAQMAOAEEAA==","P":[[7,"T"],[9,""],[10,"T"],[11,""],[14,"U"],[15,""],[24,"U,T"],[25,"U"],[26,""],[29,"V"],[39,"T"],[41,""],[42,"T"],[43,""],[46,"T"],[47,""],[49,"U"],[50,""],[53,"T"],[54,"U,T"],[55,"U"],[56,""],[59,"V"],[61,""],[62,"T"],[64,""],[65,"T"],[66,"U"],[67,""],[68,"U,T"],[69,"U"],[70,""],[71,"V"],[72,""],[78,"T"],[80,""],[81,"T"],[82,""],[83,"U"],[84,""],[85,"U,T"],[86,"U"],[87,""],[89,"V"],[90,""],[96,"T"],[98,""],[99,"T"],[100,""],[101,"U"],[102,"U,T"],[103,"U"],[104,""],[106,"V"],[108,""],[111,"T"],[113,""],[114,"T"],[115,"U"],[116,""],[121,"U,T"],[122,"U"],[123,""],[125,"V"],[128,""],[129,"T"],[132,""],[133,"T"],[134,""],[135,"__D"],[136,""],[137,"T"],[138,""],[139,"U"],[141,""],[143,"__S"],[144,"T"],[145,"U,T"],[146,"U"],[147,""],[149,"V"],[153,"T"],[157,"__D"],[159,""],[163,"T"],[165,""],[173,"U"],[175,"__S"],[177,""],[181,"U,T"],[183,"U"],[185,""],[187,"V"],[190,"T"],[193,""],[194,"U"],[195,""],[197,"U,T"],[198,"U"],[199,""],[201,"V"],[203,"T"],[205,""],[206,"T"],[207,""],[211,"T"],[212,""],[213,"U"],[214,""],[216,"T"],[217,"U,T"],[218,"U"],[219,""],[220,"V"],[221,""],[230,"T"],[232,""],[235,"T"],[236,""],[238,"U"],[239,""],[240,"U,T"],[241,"U"],[242,""],[244,"V"],[247,""],[248,"T"],[250,""],[252,"T"],[253,""],[256,"U"],[257,"U,T"],[258,"U"],[259,""],[261,"V"],[263,""],[269,"T"],[271,""],[272,"T"],[273,""],[276,"T"],[277,"U"],[278,""],[280,"T"],[281,""],[282,"U,T"],[283,"U"],[284,""],[285,"V"],[305,"T"],[307,""],[309,"T"],[310,"U"],[311,""],[312,"U,T"],[313,"U"],[314,""],[315,"V"]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[11166]}